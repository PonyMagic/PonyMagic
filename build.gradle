buildscript {
    repositories {
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
plugins {
    id "com.palantir.git-version" version "0.11.0"
    id "com.github.johnrengelman.shadow" version "4.0.0"
    id "maven"
}
apply plugin: 'net.minecraftforge.gradle.forge'

def gitVersionName() {
    def details = versionDetails()
    if (details.isCleanTag) {
        return "$details.lastTag"
    } else {
        return "$details.lastTag-SNAPSHOT-$details.gitHash"
    }
}

def modName = "Pony Magic"
def modUrl = "https://github.com/PonyMagic/PonyMagic"
def modDescription = """Some pony magic"""

group = "net.braunly"
archivesBaseName = "ponymagic"
version = gitVersionName()

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = 1.8
}


minecraft {
    version = mcversion + "-" + forgeversion
    runDir = "run"
    mappings = mcp_mappings
    sourceSets {
        api {
            java {
                srcDir 'api/src/'
            }
        }
    }

}

//sourceSets {
//    main { output.resourcesDir = output.classesDir }
//}

dependencies {
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.18'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // Fill mcmod.info template
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand  'version': project.version,
                'mcversion': project.minecraft.version,
                'modid': project.archivesBaseName,
                'name': modName,
                'description': modDescription,
                'url': modUrl
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from sourceSets.api.output
    
    include { sourceSets.main.output.classesDir }
    zip64 true
}

shadowJar {
    from sourceSets.api.output
    dependencies {
        exclude(dependency("org.projectlombok:lombok"))
    }
    exclude "META-INF/*"
}

reobf {
    shadowJar {}
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

runClient {
    args '--username=player'
}

idea { 
    module { 
        inheritOutputDirs = true 
    } 
}
